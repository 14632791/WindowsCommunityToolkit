<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Microsoft.Toolkit.Uwp.SampleApp.SamplePages"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ex="using:Microsoft.Toolkit.Uwp.UI.Extensions" 
      xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
      mc:Ignorable="d">

  <Grid>
    <Grid.Resources>
<SolidColorBrush x:Key="TabViewBackground"
                             Color="{StaticResource SystemChromeLowColor}" />
            <SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected"
                             Color="{StaticResource SystemChromeLowColor}" />
            <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPointerOver"
                             Color="{StaticResource SystemChromeLowColor}" />
            <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPressed"
                             Color="{StaticResource SystemChromeLowColor}" />
            <StaticResource x:Key="TabViewItemHeaderBackground"
                            ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TabViewSelectionIndicatorForeground"
                            ResourceKey="SystemControlForegroundAccentBrush" />
            <StaticResource x:Key="TabViewItemHeaderForeground"
                            ResourceKey="SystemControlForegroundBaseMediumBrush" />
            <StaticResource x:Key="TabViewItemHeaderForegroundPressed"
                            ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
            <StaticResource x:Key="TabViewItemHeaderForegroundSelected"
                            ResourceKey="SystemControlForegroundBaseHighBrush" />
            <StaticResource x:Key="TabViewItemHeaderForegroundPointerOver"
                            ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
            <StaticResource x:Key="TabViewItemHeaderForegroundDisabled"
                            ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
            <StaticResource x:Key="TabViewItemHeaderRevealBorderBrush"
                            ResourceKey="SystemControlBackgroundTransparentRevealBorderBrush" />

    <Thickness x:Key="TabViewItemHeaderMargin">0</Thickness>
    <Thickness x:Key="TabViewItemHeaderIconMargin">0,0,8,0</Thickness>
    <Thickness x:Key="TabViewItemHeaderCloseMargin">8,0,-8,0</Thickness>
    <Thickness x:Key="TabViewItemHeaderBorderThickness">0,1,1,0</Thickness>
    <x:Double x:Key="TabViewItemHeaderIconSize">16</x:Double>
    <x:Double x:Key="TabViewItemHeaderMinWidth">48</x:Double>
    <x:Double x:Key="TabViewItemHeaderMinHeight">40</x:Double>
    <x:Double x:Key="TabViewItemHeaderMaxWidth">NaN</x:Double>
    <x:Double x:Key="TabViewItemHeaderCloseWidth">32</x:Double>

    <converters:EmptyObjectToObjectConverter x:Key="NullVisibilityConverter"
                                             EmptyValue="Collapsed"
                                             NotEmptyValue="Visible" />
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <!--  65 is the size of both scroll buttons + 1 for layout rounding.  -->
    <converters:DoubleToVisibilityConverter x:Key="GreaterThanToleranceVisibilityConverter"
                                            GreaterThan="65.0" />

    <converters:BoolToObjectConverter x:Key="CloseCollapsingSizeConverter"
                                      FalseValue="{StaticResource TabViewItemHeaderCloseWidth}"
                                      TrueValue="NaN" />
      
         <Style x:Key="TabViewItemCloseButtonStyle"
           TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="6,0,6,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                   Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
                   
      <ControlTemplate x:Key="TabViewItemHeaderTemplate"
                 TargetType="controls:TabViewItem">
        <Grid x:Name="LayoutRoot"
              ex:FrameworkElementExtensions.AncestorType="controls:TabView"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Control.IsTemplateFocusTarget="True"
              FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
              RenderTransformOrigin="0.5,0.5">
          <Grid.RenderTransform>
            <ScaleTransform x:Name="LayoutRootScale" />
          </Grid.RenderTransform>
          <Rectangle x:Name="SelectionIndicator"
                     Height="2"
                     Margin="0,-1"
                     VerticalAlignment="Top"
                     Fill="{ThemeResource TabViewSelectionIndicatorForeground}"
                     Opacity="0" />

          <Grid Padding="{TemplateBinding Padding}">
            <Grid x:Name="ContentPresenterGrid">
              <Grid.RenderTransform>
                <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
              </Grid.RenderTransform>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!--  Modifications of default ListViewItem Template for our Tab Here  -->
              <Viewbox x:Name="IconBox"
                       MaxWidth="{ThemeResource TabViewItemHeaderIconSize}"
                       MaxHeight="{ThemeResource TabViewItemHeaderIconSize}"
                       Margin="{ThemeResource TabViewItemHeaderIconMargin}"
                       Visibility="{Binding Icon, Converter={StaticResource NullVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter x:Name="Icon"
                                  Content="{TemplateBinding Icon}"
                                  Foreground="{TemplateBinding Foreground}" />
              </Viewbox>
              <ContentPresenter x:Name="ContentPresenter"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                FontWeight="{TemplateBinding FontWeight}"
                                OpticalMarginAlignment="TrimSideBearings" />
              <!--  Use grid to toggle visibility based on IsClosable property and inner border for hover animations.  -->
              <Border x:Name="CloseButtonContainer"
                      Grid.Column="2"
                      Width="{Binding (ex:FrameworkElementExtensions.Ancestor).IsCloseButtonOverlay, Converter={StaticResource CloseCollapsingSizeConverter}, ElementName=LayoutRoot}"
                      HorizontalAlignment="Right"
                      Visibility="{Binding IsClosable, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Border x:Name="CloseButtonBorder"
                        Width="{StaticResource TabViewItemHeaderCloseWidth}"
                        Margin="{ThemeResource TabViewItemHeaderCloseMargin}"
                        Background="{TemplateBinding Background}"
                        Visibility="Collapsed">
                  <Button x:Name="CloseButton"
                          Style="{StaticResource TabViewItemCloseButtonStyle}">
                    &#xE711;
                  </Button>
                </Border>
              </Border>
            </Grid>
          </Grid>

          <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
              <VisualState x:Name="Normal" />

              <VisualState x:Name="PointerOver">
                <VisualState.Setters>
                  <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                </VisualState.Setters>

                <Storyboard>
                  <!--  Close Button  -->
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Background">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>

              <VisualState x:Name="Pressed">
                <VisualState.Setters>
                  <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}" />
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                  <Setter Target="SelectionIndicator.Opacity" Value="0.4" />
                </VisualState.Setters>
              </VisualState>

              <VisualState x:Name="Selected">
                <VisualState.Setters>
                  <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                </VisualState.Setters>

                <Storyboard>
                  <!--  Selected Bar  -->
                  <DoubleAnimation Storyboard.TargetName="SelectionIndicator"
                                   Storyboard.TargetProperty="Opacity"
                                   To="1"
                                   Duration="0" />

                  <!--  Close Button  -->
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Background">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>

              <VisualState x:Name="PointerOverSelected">
                <VisualState.Setters>
                  <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                </VisualState.Setters>

                <Storyboard>
                  <!--  Selected Bar  -->
                  <DoubleAnimation Storyboard.TargetName="SelectionIndicator"
                                   Storyboard.TargetProperty="Opacity"
                                   To="1"
                                   Duration="0" />

                  <!--  Close Button  -->
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Background">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>

              <VisualState x:Name="PressedSelected">
                <VisualState.Setters>
                  <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                </VisualState.Setters>

                <Storyboard>
                  <!--  Selected Bar  -->
                  <DoubleAnimation Storyboard.TargetName="SelectionIndicator"
                                   Storyboard.TargetProperty="Opacity"
                                   To="1"
                                   Duration="0" />

                  <!--  Close Button  -->
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Background">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                  </ObjectAnimationUsingKeyFrames>
                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBorder"
                                                 Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="Visible" />
                  </ObjectAnimationUsingKeyFrames>
                </Storyboard>
              </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="DisabledStates">
              <VisualState x:Name="Enabled" />

              <VisualState x:Name="Disabled">
                <VisualState.Setters>
                  <Setter Target="Icon.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                  <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                </VisualState.Setters>
              </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="DataVirtualizationStates">
              <VisualState x:Name="DataAvailable" />

              <VisualState x:Name="DataPlaceholder" />
            </VisualStateGroup>

            <VisualStateGroup x:Name="ReorderHintStates">
              <VisualState x:Name="NoReorderHint" />

              <VisualState x:Name="BottomReorderHint">
                <Storyboard>
                  <DragOverThemeAnimation Direction="Bottom"
                                          ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                          TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="TopReorderHint">
                <Storyboard>
                  <DragOverThemeAnimation Direction="Top"
                                          ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                          TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="RightReorderHint">
                <Storyboard>
                  <DragOverThemeAnimation Direction="Right"
                                          ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                          TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="LeftReorderHint">
                <Storyboard>
                  <DragOverThemeAnimation Direction="Left"
                                          ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                          TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualStateGroup.Transitions>
                <VisualTransition GeneratedDuration="0:0:0.2"
                                  To="NoReorderHint" />
              </VisualStateGroup.Transitions>
            </VisualStateGroup>

            <VisualStateGroup x:Name="DragStates">
              <VisualState x:Name="NotDragging" />

              <VisualState x:Name="Dragging">
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                   Storyboard.TargetProperty="Opacity"
                                   To="{ThemeResource ListViewItemDragThemeOpacity}"
                                   Duration="0" />
                  <DragItemThemeAnimation TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="DraggingTarget" />

              <VisualState x:Name="MultipleDraggingPrimary" />

              <VisualState x:Name="MultipleDraggingSecondary" />

              <VisualState x:Name="DraggedPlaceholder" />

              <VisualState x:Name="Reordering">
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                   Storyboard.TargetProperty="Opacity"
                                   To="{ThemeResource ListViewItemReorderThemeOpacity}"
                                   Duration="0:0:0.240" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="ReorderingTarget">
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                   Storyboard.TargetProperty="Opacity"
                                   To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
                                   Duration="0:0:0.240" />
                  <DoubleAnimation Storyboard.TargetName="LayoutRootScale"
                                   Storyboard.TargetProperty="ScaleX"
                                   To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                   Duration="0:0:0.240" />
                  <DoubleAnimation Storyboard.TargetName="LayoutRootScale"
                                   Storyboard.TargetProperty="ScaleY"
                                   To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                   Duration="0:0:0.240" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="MultipleReorderingPrimary" />

              <VisualState x:Name="ReorderedPlaceholder">
                <Storyboard>
                  <FadeOutThemeAnimation TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualState x:Name="DragOver">
                <Storyboard>
                  <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                </Storyboard>
              </VisualState>

              <VisualStateGroup.Transitions>
                <VisualTransition GeneratedDuration="0:0:0.2"
                                  To="NotDragging" />
              </VisualStateGroup.Transitions>
            </VisualStateGroup>
          </VisualStateManager.VisualStateGroups>
        </Grid>
      </ControlTemplate>
      
      <Style TargetType="controls:TabViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemHeaderRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemHeaderBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TabViewItemHeaderForeground}" />
        <Setter Property="Margin" Value="{ThemeResource TabViewItemHeaderMargin}" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="IsHoldingEnabled" Value="True" />
        <Setter Property="Padding" Value="14,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="{ThemeResource TabViewItemHeaderMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource TabViewItemHeaderMinHeight}" />
        <Setter Property="MaxWidth" Value="{ThemeResource TabViewItemHeaderMaxWidth}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="IsClosable" Value="False" />
        <Setter Property="Template" Value="{StaticResource TabViewItemHeaderTemplate}" />
      </Style>
    </Grid.Resources>
    
    <Grid.RowDefinitions>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <controls:TabView x:Name="Tabs"
                      TabWidthBehavior="@[Tab Width Behavior:Enum:TabWidthMode.Actual]"
                      CanCloseTabs="@[Can Close Tabs:Bool:False]"
                      IsCloseButtonOverlay="@[Overlay Close Button:Bool:False]"
                      CanDragItems="@[Drag and Drop Enabled:Bool:False]"
                      CanReorderItems="@[Drag and Drop Enabled]"
                      AllowDrop="@[Drag and Drop Enabled]"
                      SelectedTabWidth="200">
      <controls:TabView.Resources>
        <x:Double x:Key="TabViewItemHeaderMinHeight">40</x:Double>
        <x:Double x:Key="TabViewItemHeaderMinWidth">48</x:Double>
        <x:Double x:Key="TabViewItemHeaderMaxWidth">200</x:Double>
      </controls:TabView.Resources>
      <controls:TabView.Header>
        <TextBlock Padding="16,8,0,8" FontSize="16" FontWeight="Bold" Text="TabView Control Header"/>
      </controls:TabView.Header>
      <controls:TabView.TabStartHeader>
        <Button Width="48"
                Height="{StaticResource TabViewItemHeaderMinHeight}"
                Margin="0,0,-1,0"
                BorderThickness="1"
                Background="Transparent" 
                Style="{StaticResource ButtonRevealStyle}" 
                Padding="2,2,0,0">
          <Viewbox MaxWidth="16" MaxHeight="16">
            <SymbolIcon Symbol="AddFriend"/>
          </Viewbox>
        </Button>
      </controls:TabView.TabStartHeader>

      <!-- Tabs -->
      <controls:TabViewItem Header="Home" Icon="Home">
        <TextBlock Padding="16">The TabView control has multiple uses.</TextBlock>
      </controls:TabViewItem>
      <controls:TabViewItem Header="Tab 2 Has Longer Text" Icon="Audio">
        <TextBlock Padding="16">It has a lot of versitility out of the box for different scenarios.</TextBlock>
      </controls:TabViewItem>
      <controls:TabViewItem Header="Tab 3" Icon="Video">
        <TextBlock Padding="16">You can enable drag-and-drop and reorder the tabs too.</TextBlock>
      </controls:TabViewItem>
      <controls:TabViewItem Header="Not Closable" Icon="Calendar" IsClosable="False">
        <TextBlock Padding="16">This tab isn't closable because its IsClosable property is set to False, even when CanCloseTabs is True.</TextBlock>
      </controls:TabViewItem>

      <controls:TabView.TabActionHeader>
        <Button x:Name="AddTabButtonUpper"
                Width="48"
                Height="{StaticResource TabViewItemHeaderMinHeight}"
                Margin="-1,0,0,0"
                BorderThickness="1"
                Background="Transparent"
                Style="{StaticResource ButtonRevealStyle}">
          <Viewbox MaxWidth="16"
                    MaxHeight="16">
            <FontIcon FontFamily="Segoe MDL2 Assets"
                      Glyph="&#xE710;" />
          </Viewbox>
        </Button>

      </controls:TabView.TabActionHeader>

      <controls:TabView.TabEndHeader>
        <Button Width="48"
                Height="{StaticResource TabViewItemHeaderMinHeight}"
                Margin="-1,0,0,0"
                BorderThickness="1" 
                Background="Transparent" 
                Style="{StaticResource ButtonRevealStyle}">
          <Viewbox MaxWidth="16" MaxHeight="16">
            <SymbolIcon Symbol="Setting"/>
          </Viewbox>
        </Button>
      </controls:TabView.TabEndHeader>

      <controls:TabView.Footer>
        <TextBlock Padding="16,8,16,8"
                   HorizontalAlignment="Right"
                   FontSize="16" FontWeight="Bold"
                   Text="TabView Control Footer" />
      </controls:TabView.Footer>
    </controls:TabView>
  </Grid>
</Page>
