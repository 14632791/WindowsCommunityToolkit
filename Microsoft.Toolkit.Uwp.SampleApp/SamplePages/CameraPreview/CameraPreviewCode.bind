<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"      
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d">    
    <StackPanel Orientation="Vertical">
		<controls:CameraPreview x:Name="CameraPreviewControl" 
                                     VideoFrameArrived="CameraPreviewControl_VideoFrameArrived"
                                     SoftwareBitmapArrived="CameraPreviewControl_SoftwareBitmapArrived">
		</controls:CameraPreview>  
		<Image x:Name="CurrentFrameImage" MinWidth="300" Width="400" HorizontalAlignment="Left"></Image>		
    </StackPanel>
</Page>

var softwareBitmapSource = new SoftwareBitmapSource();
CurrentFrameImage.Source = softwareBitmapSource;

// Register for VideoFrameArrived to get video frames 
private void CameraPreviewControl_VideoFrameArrived(object sender, VideoFrame e)
{
    VideoFrame videoFrame = e;
}

// Register for SoftwareBitmapArrived to get software bitmaps and bind it to the Xaml Image control
private void CameraPreviewControl_SoftwareBitmapArrived(object sender, SoftwareBitmap e)
{
    SoftwareBitmap softwareBitmap = e;
	var targetSoftwareBitmap = softwareBitmap;

    if (softwareBitmap != null)
    {
        if (softwareBitmap.BitmapPixelFormat != BitmapPixelFormat.Bgra8 || softwareBitmap.BitmapAlphaMode == BitmapAlphaMode.Straight)
        {
            targetSoftwareBitmap = SoftwareBitmap.Convert(softwareBitmap, BitmapPixelFormat.Bgra8, BitmapAlphaMode.Premultiplied);
        }

        await softwareBitmapSource.SetBitmapAsync(targetSoftwareBitmap);
    }
}